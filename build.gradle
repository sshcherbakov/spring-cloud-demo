buildscript {
	ext {
		springBootVersion = '1.3.2.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}") 
	}
}

subprojects {
	apply plugin: 'java'
	apply plugin: 'eclipse'
	apply plugin: 'idea'
	apply plugin: "io.spring.dependency-management"

	jar {
		version = '0.0.1-SNAPSHOT'
	}
	sourceCompatibility = 1.8
	targetCompatibility = 1.8

	repositories {
		mavenCentral()
		maven { url "https://repo.spring.io/libs-release" }
		maven { url "https://repo.spring.io/snapshot" }
		maven { url "https://repo.spring.io/milestone" }
	}

	dependencyManagement {
		imports { 
			//mavenBom "org.springframework.cloud:spring-cloud-starter-parent:Brixton.BUILD-SNAPSHOT" 
			mavenBom "io.pivotal.spring.cloud:spring-cloud-services-starter-parent:1.0.1.RELEASE" 
		}
	}

	eclipse {
		classpath {
			 containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
			 containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
		}
	}
}

project(':spring-cloud-common') {
	dependencies {
		compile('com.fasterxml.jackson.core:jackson-databind')
	}
}

project(':spring-cloud-service') {
	apply plugin: 'spring-boot' 
	apply plugin: "io.spring.dependency-management"
	
	dependencies {
		compile project(':spring-cloud-common')
		compile("io.pivotal.spring.cloud:spring-cloud-services-starter-config-client")
		compile('org.springframework.boot:spring-boot-starter-actuator')
		compile('org.springframework.cloud:spring-cloud-starter-config')
		compile('org.springframework.boot:spring-boot-starter-cloud-connectors')
		compile('org.springframework.cloud:spring-cloud-starter-eureka')
		compile('org.springframework.cloud:spring-cloud-starter-hystrix')
		compile('org.springframework.cloud:spring-cloud-starter-ribbon')
		compile('org.springframework.cloud:spring-cloud-starter')
		compile('org.springframework.boot:spring-boot-starter-web')
		testCompile('org.springframework.boot:spring-boot-starter-test') 
	}
}

project(':spring-cloud-gateway') {
	apply plugin: 'spring-boot' 

    dependencies {
		compile project(':spring-cloud-common')
		compile("io.pivotal.spring.cloud:spring-cloud-services-starter-config-client")
		compile('org.springframework.boot:spring-boot-starter-actuator')
		compile('org.springframework.cloud:spring-cloud-starter-config')
		compile('org.springframework.boot:spring-boot-starter-cloud-connectors')
		compile('org.springframework.cloud:spring-cloud-starter-eureka')
		compile('org.springframework.cloud:spring-cloud-starter-hystrix')
		compile('org.springframework.cloud:spring-cloud-starter-ribbon')
		compile('org.springframework.cloud:spring-cloud-starter')
		compile('org.springframework.boot:spring-boot-starter-web')
		testCompile('org.springframework.boot:spring-boot-starter-test') 
		compile('org.springframework.cloud:spring-cloud-starter-zuul')
		compile('org.springframework.cloud:spring-cloud-netflix-hystrix-amqp')
		//compile('org.springframework.cloud:spring-cloud-starter-oauth2')
		//compile('org.springframework.cloud:spring-cloud-starter-security')
    }

}

task wrapper(type: Wrapper) {
	gradleVersion = '2.9'
}
